static const uint32_t CHAR_MAP[] = 
{
	// ASCII TABLE ENCODED IN 5X5 PIXEL CHARACTERS
	// START ASCII CHARACTER 33 (!) 
	0b00100001000010000000001000000000, // ! (33)
	0b01010010100000000000000000000000, // " (34) 
	0b01010111110101011111010100000000, // # (35)
	0b11111101001111100101111110000000, // $ (36)
	0b11001110100010001011100110000000, // ...
	0b11100101001111010011111110000000,
	0b00100001000000000000000000000000,
	0b00010001000010000100000100000000,
	0b01000001000010000100010000000000,
	0b00000010100010001010000000000000,
	0b00100001001111100100001000000000,
	0b00000000000000000100010000000000,
	0b00000000001111100000000000000000,
	0b00000000000000000000001000000000,
	0b00001000100010001000100000000000,
	0b11111100011010110001111110000000,
	0b01110010100001000010011110000000,
	0b11111000011111110000111110000000,
	0b11111000010111100001111110000000,
	0b10001100011111100001000010000000,
	0b11111100001111100001111110000000,
	0b11111100001111110001111110000000,
	0b11110000100011100010000100000000,
	0b11111100011111110001111110000000,
	0b11111100011111100001000010000000,
	0b00000001000000000100000000000000,
	0b00000001000000000100010000000000,
	0b00010001000100000100000100000000,
	0b00000111110000011111000000000000,
	0b01000001000001000100010000000000,
	0b11111000011111110000001000000000,
	0b11111100011011110101111110000000,
	0b11111100011111110001100010000000,
	0b11110100011111110001111100000000,
	0b11111100001000010000111110000000,
	0b11110100011000110001111100000000,
	0b11111100001111010000111110000000,
	0b11110100001111010000100000000000,
	0b11111100001011110001111110000000,
	0b10001100011111110001100010000000,
	0b11111001000010000100111110000000,
	0b11110001000010010100111000000000,
	0b10010101001100010100100100000000,
	0b10000100001000010000111100000000,
	0b10001110111010110001100010000000,
	0b10001110011010110011100010000000,
	0b11111100011000110001111110000000,
	0b11111100011111110000100000000000,
	0b11111100011000110011111110000000,
	0b11111100011111110010100010000000,
	0b11111100001111100001111110000000,
	0b11111001000010000100001000000000,
	0b10001100011000110001111110000000,
	0b10001100010101001010001000000000,
	0b10001100011000110101110110000000,
	0b10001010100010001010100010000000,
	0b10001010100010000100001000000000,
	0b11111000100010001000111110000000,

	// Second to Last symbols [91, 96] 
	0b00110001000010000100001100000000, // [ (91)  
	0b10000010000010000010000010000000, // \/(92)
	0b01100001000010000100011000000000, // ] (93)
	0b00100010101000100000000000000000, // ^ (94)
	0b00000000000000000000111110000000, // _ (95) 
	0b01000001000000000000000000000000, // ` (96) 

	//... lower case letters repeat upper case letters ...//

	// Last Symbols (>122) 
	0b00110011000100001100001100000000, // } (123)
	0b00100001000010000100001000000000, // | (124)
	0b01100001100001000110011000000000, // } (125)
	0b00000111011011100000000000000000, // ~ (126)
};

