cv::Vec3b vga_colors[] = {
// row: 0
cv::Vec3b(0x00, 0x00, 0x00), 
cv::Vec3b(0xaa, 0x00, 0x00), 
cv::Vec3b(0x00, 0xaa, 0x00), 
cv::Vec3b(0xaa, 0xaa, 0x00), 
cv::Vec3b(0x00, 0x00, 0xaa), 
cv::Vec3b(0xaa, 0x00, 0xaa), 
cv::Vec3b(0x00, 0x55, 0xaa), 
cv::Vec3b(0xaa, 0xaa, 0xaa), 
cv::Vec3b(0x55, 0x55, 0x55), 
cv::Vec3b(0xff, 0x55, 0x55), 
cv::Vec3b(0x55, 0xff, 0x55), 
cv::Vec3b(0xff, 0xff, 0x55), 
cv::Vec3b(0x55, 0x55, 0xff), 
cv::Vec3b(0xff, 0x55, 0xff), 
cv::Vec3b(0x55, 0xff, 0xff), 
cv::Vec3b(0xff, 0xff, 0xff), 

// row: 1
cv::Vec3b(0x00, 0x00, 0x00), 
cv::Vec3b(0x10, 0x10, 0x10), 
cv::Vec3b(0x20, 0x20, 0x20), 
cv::Vec3b(0x35, 0x35, 0x35), 
cv::Vec3b(0x45, 0x45, 0x45), 
cv::Vec3b(0x55, 0x55, 0x55), 
cv::Vec3b(0x65, 0x65, 0x65), 
cv::Vec3b(0x75, 0x75, 0x75), 
cv::Vec3b(0x8a, 0x8a, 0x8a), 
cv::Vec3b(0x9a, 0x9a, 0x9a), 
cv::Vec3b(0xaa, 0xaa, 0xaa), 
cv::Vec3b(0xba, 0xba, 0xba), 
cv::Vec3b(0xca, 0xca, 0xca), 
cv::Vec3b(0xdf, 0xdf, 0xdf), 
cv::Vec3b(0xef, 0xef, 0xef), 
cv::Vec3b(0xff, 0xff, 0xff), 

// row: 2
cv::Vec3b(0xff, 0x00, 0x00), 
cv::Vec3b(0xff, 0x00, 0x41), 
cv::Vec3b(0xff, 0x00, 0x82), 
cv::Vec3b(0xff, 0x00, 0xbe), 
cv::Vec3b(0xff, 0x00, 0xff), 
cv::Vec3b(0xbe, 0x00, 0xff), 
cv::Vec3b(0x82, 0x00, 0xff), 
cv::Vec3b(0x41, 0x00, 0xff), 
cv::Vec3b(0x00, 0x00, 0xff), 
cv::Vec3b(0x00, 0x41, 0xff), 
cv::Vec3b(0x00, 0x82, 0xff), 
cv::Vec3b(0x00, 0xbe, 0xff), 
cv::Vec3b(0x00, 0xff, 0xff), 
cv::Vec3b(0x00, 0xff, 0xbe), 
cv::Vec3b(0x00, 0xff, 0x82), 
cv::Vec3b(0x00, 0xff, 0x41), 

// row: 3
cv::Vec3b(0x00, 0xff, 0x00), 
cv::Vec3b(0x41, 0xff, 0x00), 
cv::Vec3b(0x82, 0xff, 0x00), 
cv::Vec3b(0xbe, 0xff, 0x00), 
cv::Vec3b(0xff, 0xff, 0x00), 
cv::Vec3b(0xff, 0xbe, 0x00), 
cv::Vec3b(0xff, 0x82, 0x00), 
cv::Vec3b(0xff, 0x41, 0x00), 
cv::Vec3b(0xff, 0x82, 0x82), 
cv::Vec3b(0xff, 0x82, 0x9e), 
cv::Vec3b(0xff, 0x82, 0xbe), 
cv::Vec3b(0xff, 0x82, 0xdf), 
cv::Vec3b(0xff, 0x82, 0xff), 
cv::Vec3b(0xdf, 0x82, 0xff), 
cv::Vec3b(0xbe, 0x82, 0xff), 
cv::Vec3b(0x9e, 0x82, 0xff), 

// row: 4
cv::Vec3b(0x82, 0x82, 0xff), 
cv::Vec3b(0x82, 0x9e, 0xff), 
cv::Vec3b(0x82, 0xbe, 0xff), 
cv::Vec3b(0x82, 0xdf, 0xff), 
cv::Vec3b(0x82, 0xff, 0xff), 
cv::Vec3b(0x82, 0xff, 0xdf), 
cv::Vec3b(0x82, 0xff, 0xbe), 
cv::Vec3b(0x82, 0xff, 0x9e), 
cv::Vec3b(0x82, 0xff, 0x82), 
cv::Vec3b(0x9e, 0xff, 0x82), 
cv::Vec3b(0xbe, 0xff, 0x82), 
cv::Vec3b(0xdf, 0xff, 0x82), 
cv::Vec3b(0xff, 0xff, 0x82), 
cv::Vec3b(0xff, 0xdf, 0x82), 
cv::Vec3b(0xff, 0xbe, 0x82), 
cv::Vec3b(0xff, 0x9e, 0x82), 

// row: 5
cv::Vec3b(0xff, 0xba, 0xba), 
cv::Vec3b(0xff, 0xba, 0xca), 
cv::Vec3b(0xff, 0xba, 0xdf), 
cv::Vec3b(0xff, 0xba, 0xef), 
cv::Vec3b(0xff, 0xba, 0xff), 
cv::Vec3b(0xef, 0xba, 0xff), 
cv::Vec3b(0xdf, 0xba, 0xff), 
cv::Vec3b(0xca, 0xba, 0xff), 
cv::Vec3b(0xba, 0xba, 0xff), 
cv::Vec3b(0xba, 0xca, 0xff), 
cv::Vec3b(0xba, 0xdf, 0xff), 
cv::Vec3b(0xba, 0xef, 0xff), 
cv::Vec3b(0xba, 0xff, 0xff), 
cv::Vec3b(0xba, 0xff, 0xef), 
cv::Vec3b(0xba, 0xff, 0xdf), 
cv::Vec3b(0xba, 0xff, 0xca), 

// row: 6
cv::Vec3b(0xba, 0xff, 0xba), 
cv::Vec3b(0xca, 0xff, 0xba), 
cv::Vec3b(0xdf, 0xff, 0xba), 
cv::Vec3b(0xef, 0xff, 0xba), 
cv::Vec3b(0xff, 0xff, 0xba), 
cv::Vec3b(0xff, 0xef, 0xba), 
cv::Vec3b(0xff, 0xdf, 0xba), 
cv::Vec3b(0xff, 0xca, 0xba), 
cv::Vec3b(0x71, 0x00, 0x00), 
cv::Vec3b(0x71, 0x00, 0x1c), 
cv::Vec3b(0x71, 0x00, 0x39), 
cv::Vec3b(0x71, 0x00, 0x55), 
cv::Vec3b(0x71, 0x00, 0x71), 
cv::Vec3b(0x55, 0x00, 0x71), 
cv::Vec3b(0x39, 0x00, 0x71), 
cv::Vec3b(0x1c, 0x00, 0x71), 

// row: 7
cv::Vec3b(0x00, 0x00, 0x71), 
cv::Vec3b(0x00, 0x1c, 0x71), 
cv::Vec3b(0x00, 0x39, 0x71), 
cv::Vec3b(0x00, 0x55, 0x71), 
cv::Vec3b(0x00, 0x71, 0x71), 
cv::Vec3b(0x00, 0x71, 0x55), 
cv::Vec3b(0x00, 0x71, 0x39), 
cv::Vec3b(0x00, 0x71, 0x1c), 
cv::Vec3b(0x00, 0x71, 0x00), 
cv::Vec3b(0x1c, 0x71, 0x00), 
cv::Vec3b(0x39, 0x71, 0x00), 
cv::Vec3b(0x55, 0x71, 0x00), 
cv::Vec3b(0x71, 0x71, 0x00), 
cv::Vec3b(0x71, 0x55, 0x00), 
cv::Vec3b(0x71, 0x39, 0x00), 
cv::Vec3b(0x71, 0x1c, 0x00), 

// row: 8
cv::Vec3b(0x71, 0x39, 0x39), 
cv::Vec3b(0x71, 0x39, 0x45), 
cv::Vec3b(0x71, 0x39, 0x55), 
cv::Vec3b(0x71, 0x39, 0x61), 
cv::Vec3b(0x71, 0x39, 0x71), 
cv::Vec3b(0x61, 0x39, 0x71), 
cv::Vec3b(0x55, 0x39, 0x71), 
cv::Vec3b(0x45, 0x39, 0x71), 
cv::Vec3b(0x39, 0x39, 0x71), 
cv::Vec3b(0x39, 0x45, 0x71), 
cv::Vec3b(0x39, 0x55, 0x71), 
cv::Vec3b(0x39, 0x61, 0x71), 
cv::Vec3b(0x39, 0x71, 0x71), 
cv::Vec3b(0x39, 0x71, 0x61), 
cv::Vec3b(0x39, 0x71, 0x55), 
cv::Vec3b(0x39, 0x71, 0x45), 

// row: 9
cv::Vec3b(0x39, 0x71, 0x39), 
cv::Vec3b(0x45, 0x71, 0x39), 
cv::Vec3b(0x55, 0x71, 0x39), 
cv::Vec3b(0x61, 0x71, 0x39), 
cv::Vec3b(0x71, 0x71, 0x39), 
cv::Vec3b(0x71, 0x61, 0x39), 
cv::Vec3b(0x71, 0x55, 0x39), 
cv::Vec3b(0x71, 0x45, 0x39), 
cv::Vec3b(0x71, 0x51, 0x51), 
cv::Vec3b(0x71, 0x51, 0x59), 
cv::Vec3b(0x71, 0x51, 0x61), 
cv::Vec3b(0x71, 0x51, 0x69), 
cv::Vec3b(0x71, 0x51, 0x71), 
cv::Vec3b(0x69, 0x51, 0x71), 
cv::Vec3b(0x61, 0x51, 0x71), 
cv::Vec3b(0x59, 0x51, 0x71), 

// row: 10
cv::Vec3b(0x51, 0x51, 0x71), 
cv::Vec3b(0x51, 0x59, 0x71), 
cv::Vec3b(0x51, 0x61, 0x71), 
cv::Vec3b(0x51, 0x69, 0x71), 
cv::Vec3b(0x51, 0x71, 0x71), 
cv::Vec3b(0x51, 0x71, 0x69), 
cv::Vec3b(0x51, 0x71, 0x61), 
cv::Vec3b(0x51, 0x71, 0x59), 
cv::Vec3b(0x51, 0x71, 0x51), 
cv::Vec3b(0x59, 0x71, 0x51), 
cv::Vec3b(0x61, 0x71, 0x51), 
cv::Vec3b(0x69, 0x71, 0x51), 
cv::Vec3b(0x71, 0x71, 0x51), 
cv::Vec3b(0x71, 0x69, 0x51), 
cv::Vec3b(0x71, 0x61, 0x51), 
cv::Vec3b(0x71, 0x59, 0x51), 

// row: 11
cv::Vec3b(0x41, 0x00, 0x00), 
cv::Vec3b(0x41, 0x00, 0x10), 
cv::Vec3b(0x41, 0x00, 0x20), 
cv::Vec3b(0x41, 0x00, 0x31), 
cv::Vec3b(0x41, 0x00, 0x41), 
cv::Vec3b(0x31, 0x00, 0x41), 
cv::Vec3b(0x20, 0x00, 0x41), 
cv::Vec3b(0x10, 0x00, 0x41), 
cv::Vec3b(0x00, 0x00, 0x41), 
cv::Vec3b(0x00, 0x10, 0x41), 
cv::Vec3b(0x00, 0x20, 0x41), 
cv::Vec3b(0x00, 0x31, 0x41), 
cv::Vec3b(0x00, 0x41, 0x41), 
cv::Vec3b(0x00, 0x41, 0x31), 
cv::Vec3b(0x00, 0x41, 0x20), 
cv::Vec3b(0x00, 0x41, 0x10), 

// row: 12
cv::Vec3b(0x00, 0x41, 0x00), 
cv::Vec3b(0x10, 0x41, 0x00), 
cv::Vec3b(0x20, 0x41, 0x00), 
cv::Vec3b(0x31, 0x41, 0x00), 
cv::Vec3b(0x41, 0x41, 0x00), 
cv::Vec3b(0x41, 0x31, 0x00), 
cv::Vec3b(0x41, 0x20, 0x00), 
cv::Vec3b(0x41, 0x10, 0x00), 
cv::Vec3b(0x41, 0x20, 0x20), 
cv::Vec3b(0x41, 0x20, 0x28), 
cv::Vec3b(0x41, 0x20, 0x31), 
cv::Vec3b(0x41, 0x20, 0x39), 
cv::Vec3b(0x41, 0x20, 0x41), 
cv::Vec3b(0x39, 0x20, 0x41), 
cv::Vec3b(0x31, 0x20, 0x41), 
cv::Vec3b(0x28, 0x20, 0x41), 

// row: 13
cv::Vec3b(0x20, 0x20, 0x41), 
cv::Vec3b(0x20, 0x28, 0x41), 
cv::Vec3b(0x20, 0x31, 0x41), 
cv::Vec3b(0x20, 0x39, 0x41), 
cv::Vec3b(0x20, 0x41, 0x41), 
cv::Vec3b(0x20, 0x41, 0x39), 
cv::Vec3b(0x20, 0x41, 0x31), 
cv::Vec3b(0x20, 0x41, 0x28), 
cv::Vec3b(0x20, 0x41, 0x20), 
cv::Vec3b(0x28, 0x41, 0x20), 
cv::Vec3b(0x31, 0x41, 0x20), 
cv::Vec3b(0x39, 0x41, 0x20), 
cv::Vec3b(0x41, 0x41, 0x20), 
cv::Vec3b(0x41, 0x39, 0x20), 
cv::Vec3b(0x41, 0x31, 0x20), 
cv::Vec3b(0x41, 0x28, 0x20), 

// row: 14
cv::Vec3b(0x41, 0x2d, 0x2d), 
cv::Vec3b(0x41, 0x2d, 0x31), 
cv::Vec3b(0x41, 0x2d, 0x35), 
cv::Vec3b(0x41, 0x2d, 0x3d), 
cv::Vec3b(0x41, 0x2d, 0x41), 
cv::Vec3b(0x3d, 0x2d, 0x41), 
cv::Vec3b(0x35, 0x2d, 0x41), 
cv::Vec3b(0x31, 0x2d, 0x41), 
cv::Vec3b(0x2d, 0x2d, 0x41), 
cv::Vec3b(0x2d, 0x31, 0x41), 
cv::Vec3b(0x2d, 0x35, 0x41), 
cv::Vec3b(0x2d, 0x3d, 0x41), 
cv::Vec3b(0x2d, 0x41, 0x41), 
cv::Vec3b(0x2d, 0x41, 0x3d), 
cv::Vec3b(0x2d, 0x41, 0x35), 
cv::Vec3b(0x2d, 0x41, 0x31), 

// row: 15
cv::Vec3b(0x2d, 0x41, 0x2d), 
cv::Vec3b(0x31, 0x41, 0x2d), 
cv::Vec3b(0x35, 0x41, 0x2d), 
cv::Vec3b(0x3d, 0x41, 0x2d), 
cv::Vec3b(0x41, 0x41, 0x2d), 
cv::Vec3b(0x41, 0x3d, 0x2d), 
cv::Vec3b(0x41, 0x35, 0x2d), 
cv::Vec3b(0x41, 0x31, 0x2d), 
cv::Vec3b(0x00, 0x00, 0x00), 
cv::Vec3b(0x00, 0x00, 0x00), 
cv::Vec3b(0x00, 0x00, 0x00), 
cv::Vec3b(0x00, 0x00, 0x00), 
cv::Vec3b(0x00, 0x00, 0x00), 
cv::Vec3b(0x00, 0x00, 0x00), 
cv::Vec3b(0x00, 0x00, 0x00), 
cv::Vec3b(0x00, 0x00, 0x00)
};
